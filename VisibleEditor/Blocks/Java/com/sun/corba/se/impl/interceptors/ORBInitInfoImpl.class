com.sun.corba.se.impl.interceptors.ORBInitInfoImpl
arguments()
getORB()
orb_id()
add_client_request_interceptor(org.omg.PortableInterceptor.ClientRequestInterceptor)
add_client_request_interceptor_with_policy(org.omg.PortableInterceptor.ClientRequestInterceptor,[Lorg.omg.CORBA.Policy;)
add_ior_interceptor(org.omg.PortableInterceptor.IORInterceptor)
add_ior_interceptor_with_policy(org.omg.PortableInterceptor.IORInterceptor,[Lorg.omg.CORBA.Policy;)
add_server_request_interceptor(org.omg.PortableInterceptor.ServerRequestInterceptor)
add_server_request_interceptor_with_policy(org.omg.PortableInterceptor.ServerRequestInterceptor,[Lorg.omg.CORBA.Policy;)
allocate_slot_id()
codec_factory()
register_policy_factory(int,org.omg.PortableInterceptor.PolicyFactory)
resolve_initial_references(java.lang.String)
register_initial_reference(java.lang.String,org.omg.CORBA.Object)
_get_interface()
validate_connection()
_invoke(org.omg.CORBA.portable.OutputStream)
_create_request(org.omg.CORBA.Context,java.lang.String,org.omg.CORBA.NVList,org.omg.CORBA.NamedValue)
_create_request(org.omg.CORBA.Context,java.lang.String,org.omg.CORBA.NVList,org.omg.CORBA.NamedValue,org.omg.CORBA.ExceptionList,org.omg.CORBA.ContextList)
_duplicate()
_get_domain_managers()
_get_interface_def()
_get_policy(int)
_hash(int)
_is_a(java.lang.String)
_is_equivalent(org.omg.CORBA.Object)
_non_existent()
_release()
_request(java.lang.String,boolean)
_request(java.lang.String)
_set_policy_override([Lorg.omg.CORBA.Policy;,org.omg.CORBA.SetOverrideType)
_is_local()
_orb()
_releaseReply(org.omg.CORBA.portable.InputStream)
_servant_postinvoke(org.omg.CORBA.portable.ServantObject)
_servant_preinvoke(java.lang.String,java.lang.Class)
wait()
wait(long,int)
wait(long)
equals(java.lang.Object)
toString()
hashCode()
getClass()
notify()
notifyAll()
