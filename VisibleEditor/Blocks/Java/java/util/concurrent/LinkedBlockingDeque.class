java.util.concurrent.LinkedBlockingDeque
add(java.lang.Object)
remove(java.lang.Object)
remove()
put(java.lang.Object)
toString()
clear()
contains(java.lang.Object)
iterator()
size()
toArray([Ljava.lang.Object;)
toArray()
spliterator()
getFirst()
pop()
push(java.lang.Object)
poll(long,java.util.concurrent.TimeUnit)
poll()
peek()
addFirst(java.lang.Object)
addLast(java.lang.Object)
descendingIterator()
element()
getLast()
offer(java.lang.Object)
offer(java.lang.Object,long,java.util.concurrent.TimeUnit)
offerFirst(java.lang.Object)
offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit)
offerLast(java.lang.Object)
offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit)
peekFirst()
peekLast()
pollFirst()
pollFirst(long,java.util.concurrent.TimeUnit)
pollLast()
pollLast(long,java.util.concurrent.TimeUnit)
removeFirst()
removeFirstOccurrence(java.lang.Object)
removeLast()
removeLastOccurrence(java.lang.Object)
drainTo(java.util.Collection,int)
drainTo(java.util.Collection)
take()
remainingCapacity()
putFirst(java.lang.Object)
putLast(java.lang.Object)
takeFirst()
takeLast()
addAll(java.util.Collection)
isEmpty()
containsAll(java.util.Collection)
removeAll(java.util.Collection)
retainAll(java.util.Collection)
wait()
wait(long,int)
wait(long)
equals(java.lang.Object)
hashCode()
getClass()
notify()
notifyAll()
stream()
removeIf(java.util.function.Predicate)
parallelStream()
forEach(java.util.function.Consumer)
