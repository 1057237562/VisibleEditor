java.beans.beancontext.BeanContextServices
getService(java.beans.beancontext.BeanContextChild,java.lang.Object,java.lang.Class,java.lang.Object,java.beans.beancontext.BeanContextServiceRevokedListener)
addService(java.lang.Class,java.beans.beancontext.BeanContextServiceProvider)
hasService(java.lang.Class)
getCurrentServiceSelectors(java.lang.Class)
addBeanContextServicesListener(java.beans.beancontext.BeanContextServicesListener)
getCurrentServiceClasses()
releaseService(java.beans.beancontext.BeanContextChild,java.lang.Object,java.lang.Object)
removeBeanContextServicesListener(java.beans.beancontext.BeanContextServicesListener)
revokeService(java.lang.Class,java.beans.beancontext.BeanContextServiceProvider,boolean)
getResource(java.lang.String,java.beans.beancontext.BeanContextChild)
getResourceAsStream(java.lang.String,java.beans.beancontext.BeanContextChild)
addBeanContextMembershipListener(java.beans.beancontext.BeanContextMembershipListener)
instantiateChild(java.lang.String)
removeBeanContextMembershipListener(java.beans.beancontext.BeanContextMembershipListener)
addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
addVetoableChangeListener(java.lang.String,java.beans.VetoableChangeListener)
removeVetoableChangeListener(java.lang.String,java.beans.VetoableChangeListener)
getBeanContext()
setBeanContext(java.beans.beancontext.BeanContext)
add(java.lang.Object)
remove(java.lang.Object)
equals(java.lang.Object)
hashCode()
clear()
contains(java.lang.Object)
isEmpty()
iterator()
size()
toArray([Ljava.lang.Object;)
toArray()
spliterator()
addAll(java.util.Collection)
stream()
containsAll(java.util.Collection)
removeAll(java.util.Collection)
removeIf(java.util.function.Predicate)
retainAll(java.util.Collection)
parallelStream()
forEach(java.util.function.Consumer)
isDesignTime()
setDesignTime(boolean)
avoidingGui()
dontUseGui()
needsGui()
okToUseGui()
serviceAvailable(java.beans.beancontext.BeanContextServiceAvailableEvent)
serviceRevoked(java.beans.beancontext.BeanContextServiceRevokedEvent)
