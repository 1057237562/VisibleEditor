com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl
toString()
getTypeName(com.sun.xml.internal.bind.api.TypeReference)
getElement(java.lang.Class,javax.xml.namespace.QName)
getBeanInfo(java.lang.Class,boolean)
getBeanInfo(java.lang.Class)
getBeanInfo(java.lang.Object,boolean)
getBeanInfo(java.lang.Object)
getElementName(java.lang.Class)
getElementName(java.lang.Object)
createBridge(com.sun.xml.internal.bind.api.TypeReference)
createBridgeContext()
generateEpisode(javax.xml.transform.Result)
generateSchema(javax.xml.bind.SchemaOutputResolver)
getBuildId()
getElementPropertyAccessor(java.lang.Class,java.lang.String,java.lang.String)
getKnownNamespaceURIs()
getRuntimeTypeInfoSet()
hasSwaRef()
createBinder(java.lang.Class)
createBinder()
createJAXBIntrospector()
createMarshaller()
createMarshaller()
createUnmarshaller()
createUnmarshaller()
createValidator()
createTransformerHandler(boolean)
getGlobalType(javax.xml.namespace.QName)
getNearestTypeName(javax.xml.namespace.QName)
getNumberOfAttributeNames()
getNumberOfElementNames()
getNumberOfLocalNames()
getOrCreate(com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeInfo)
getTypeInfoSet()
getUTF8NameTable()
getValidRootNames()
createAugmented(java.lang.Class)
selectRootLoader(com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,com.sun.xml.internal.bind.v2.runtime.unmarshaller.TagName)
getXMIMEContentType(java.lang.Object)
getXmlNsSet()
newInstance([Ljava.lang.Class;,java.util.Collection,java.util.Map,java.lang.String,boolean,com.sun.xml.internal.bind.v2.model.annotation.RuntimeAnnotationReader)
newInstance([Ljava.lang.Class;,java.util.Collection,java.util.Map,java.lang.String,boolean,com.sun.xml.internal.bind.v2.model.annotation.RuntimeAnnotationReader,boolean,boolean,boolean,boolean)
newInstance([Ljava.lang.Class;,java.util.Collection,java.lang.String,boolean)
getBaseType(java.lang.reflect.Type,java.lang.Class)
mangleNameToClassName(java.lang.String)
mangleNameToPropertyName(java.lang.String)
mangleNameToVariableName(java.lang.String)
newInstance(java.lang.String,java.lang.ClassLoader,java.util.Map)
newInstance([Ljava.lang.Class;)
newInstance([Ljava.lang.Class;,java.util.Map)
newInstance(java.lang.String,java.lang.ClassLoader)
newInstance(java.lang.String)
wait()
wait(long,int)
wait(long)
equals(java.lang.Object)
hashCode()
getClass()
notify()
notifyAll()
